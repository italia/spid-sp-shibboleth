<SPConfig xmlns="urn:mace:shibboleth:3.0:native:sp:config"
          xmlns:conf="urn:mace:shibboleth:3.0:native:sp:config"
          xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
    clockSkew="180">

    <OutOfProcess tranLogFormat="%u|%s|%IDP|%i|%ac|%t|%attr|%n|%b|%E|%S|%SS|%L|%UA|%a" />

    <!--
    By default, in-memory StorageService, ReplayCache, ArtifactMap, and SessionCache
    are used. See example-shibboleth2.xml for samples of explicitly configuring them.
    -->

    <!-- The ApplicationDefaults element is where most of Shibboleth's SAML bits are defined. -->
	<!-- authContextClassRef >= "https://www.spid.gov.it/SpidL2" just requests IdP to provide a certain
              security class.
              "The SAML protocol includes capabilities that easily allow a smart attacker to circumvent 
              your request process and the enforcement step is essential if you actually want to require 
              the use of any particular authentication method" (Scott Cantor).
              The enforcements step can be done it in the apache2 virtual host 
              (look for hints in spid-sp-shibboleth.conf) --> 
    <ApplicationDefaults entityID="https://{sp_fqdn}/shibboleth"
        REMOTE_USER="eppn subject-id pairwise-id persistent-id"
        signing="true"
        signingAlg="http://www.w3.org/2001/04/xmldsig-more#rsa-sha256" encryption="false"
        authnContextClassRef="https://www.spid.gov.it/SpidL2" authnContextComparison="minimum"
        NameIDFormat="urn:oasis:names:tc:SAML:2.0:nameid-format:transient"
        policyId="blockUnsolicited"
        cipherSuites="DEFAULT:!EXP:!LOW:!aNULL:!eNULL:!DES:!IDEA:!SEED:!RC4:!3DES:!kRSA:!SSLv2:!SSLv3:!TLSv1:!TLSv1.1">

        <!--
        Controls session lifetimes, address checks, cookie handling, and the protocol handlers.
        Each Application has an effectively unique handlerURL, which defaults to "/Shibboleth.sso"
        and should be a relative path, with the SP computing the full value based on the virtual
        host. Using handlerSSL="true" will force the protocol to be https. You should also set
        cookieProps to "https" for SSL-only sites. Note that while we default checkAddress to
        "false", this makes an assertion stolen in transit easier for attackers to misuse.
        -->
        <Sessions lifetime="28800" timeout="3600" relayState="ss:mem"
                  checkAddress="false" consistentAddress="true" handlerSSL="true" cookieProps="https">

            <!--
            Configures SSO for a default IdP. To allow for >1 IdP, remove
            entityID property and adjust discoveryURL to point to discovery service.
            (Set discoveryProtocol to "WAYF" for legacy Shibboleth WAYF support.)
            You can also override entityID on /Login query string, or in RequestMap/htaccess.
            -->
            <!-- Login
            acsByIndex has to be true because explicit AssertionConsumerServiceURL
            are not allowed -> error 16
            for the same reason acsIndex is needed also if it is 0
            -->

            <SessionInitiator type="Chaining" id="idpchooser" Location="/Login">
               <SessionInitiator type="SAML2" 
                                 id="Login" 
                                 outgoingBinding="urn:oasis:names:tc:SAML:profiles:SSO:request-init" 
                                 isPassive="false" 
                                 acsIndex="0" 
                                 acsByIndex="true" 
                                 signing="true">
                  <samlp:AuthnRequest xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol"
                                    xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
                                    ID="id..."
                                    Version="2.0"
                                    IssueInstant="2017-01-01T00:00:00Z"
                                    AttributeConsumingServiceIndex="0"
                                    ForceAuthn="true">
                     <!-- if NameQualifier is different from entityID, you need to update security-policy.xml -->
                     <saml:Issuer NameQualifier="https://{sp_fqdn}/shibboleth"
                                 Format="urn:oasis:names:tc:SAML:2.0:nameid-format:entity"
                    >https://{sp_fqdn}/shibboleth</saml:Issuer>
                     <samlp:NameIDPolicy Format="urn:oasis:names:tc:SAML:2.0:nameid-format:transient" />
                  </samlp:AuthnRequest>
               </SessionInitiator>
              
               <SessionInitiator type="Form" template="discoveryTemplate.html" />
            </SessionInitiator>          

            <md:AssertionConsumerService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"
                                         Location="/SAML2/POST" index="0"/>

            <!-- Logout -->
            <LogoutInitiator type="Chaining" Location="/Logout">
                <LogoutInitiator type="SAML2"
                                 outgoingBindings="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"
                                 signing="true"/>
                <LogoutInitiator type="Local" signing="true"/>
            </LogoutInitiator>

            <md:SingleLogoutService Location="/SLO/POST"
                                    Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"/>
            <md:SingleLogoutService Location="/SLO/Redirect"
                                    Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"/>
            <!-- Administrative logout. -->
            <LogoutInitiator type="Admin" Location="/Logout/Admin" acl="127.0.0.1 ::1"/>

            <!-- Extension service that generates "approximate" metadata based on SP configuration. -->
            <Handler type="MetadataGenerator" Location="/Metadata" signing="true"/>

            <!-- Status reporting service. -->
            <Handler type="Status" Location="/Status" acl="127.0.0.1 ::1"/>

            <!-- Session diagnostic service. -->
            <Handler type="Session" Location="/Session" showAttributeValues="false"/>

            <!-- JSON feed of discovery information. -->
            <Handler type="DiscoveryFeed" Location="/DiscoFeed"/>
        </Sessions>

        <!--
        Allows overriding of error template information/filenames. You can
        also add your own attributes with values that can be plugged into the
        templates, e.g., helpLocation below.
        -->
        <Errors supportContact="support@example.org"
            helpLocation="/about.html"
            styleSheet="/shibboleth-sp/main.css"/>

        <!-- SPID Test Environment IdentityServer Metadata -->
        <MetadataProvider type="XML" validate="true" path="metadata/spid-saml-check.xml" id="http://localhost:8080"/>

        <!--
            either download each IdP's metadata from:
            https://www.agid.gov.it/it/piattaforme/spid/identity-provider-accreditati
            or uncomment next MetadataProvider to use the registry.
            CIE metadata from ipzs.it are not included.
        -->
        <!--
	    <MetadataProvider type="XML" url="https://registry.spid.gov.it/metadata/idp/spid-entities-idps.xml"
                          backingFilePath="spid-entities-idps.xml"
                          reloadInterval="7200">
        </MetadataProvider>
	    -->

        <!-- Map to extract attributes from SAML assertions. -->
        <AttributeExtractor type="XML" validate="true" reloadChanges="false" path="attribute-map.xml"/>

        <!-- Default filtering policy for recognized attributes, lets other data pass. -->
        <AttributeFilter type="XML" validate="true" path="attribute-policy.xml"/>

        <!-- Simple file-based resolvers for separate signing/encryption keys. -->
        <CredentialResolver type="File" use="signing"
            key="sp-key.pem" certificate="sp-cert.pem"/>
        <!--
        <CredentialResolver type="File" use="encryption"
            key="sp-encrypt-key.pem" certificate="sp-encrypt-cert.pem"/>
        -->
    </ApplicationDefaults>

    <!-- Policies that determine how to process and authenticate runtime messages. -->
    <SecurityPolicyProvider type="XML" validate="true" path="security-policy.xml"/>

    <!-- Low-level configuration about protocols and bindings available for use. -->
    <ProtocolProvider type="XML" validate="true" reloadChanges="false" path="protocols.xml"/>

</SPConfig>
